# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateVideo {
  _count: VideoCountAggregate
  _max: VideoMaxAggregate
  _min: VideoMinAggregate
}

type Mutation {
  createManyVideo(data: [VideoCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneVideo(data: VideoCreateInput!): Video!
  deleteManyVideo(where: VideoWhereInput): AffectedRowsOutput!
  deleteOneVideo(where: VideoWhereUniqueInput!): Video
  updateManyVideo(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): AffectedRowsOutput!
  updateOneVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  upsertOneVideo(create: VideoCreateInput!, update: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video!
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  aggregateVideo(cursor: VideoWhereUniqueInput, orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): AggregateVideo!
  findFirstVideo(cursor: VideoWhereUniqueInput, distinct: [VideoScalarFieldEnum!], orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): Video
  findFirstVideoOrThrow(cursor: VideoWhereUniqueInput, distinct: [VideoScalarFieldEnum!], orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): Video
  getVideo(where: VideoWhereUniqueInput!): Video
  groupByVideo(by: [VideoScalarFieldEnum!]!, having: VideoScalarWhereWithAggregatesInput, orderBy: [VideoOrderByWithAggregationInput!], skip: Int, take: Int, where: VideoWhereInput): [VideoGroupBy!]!
  video(where: VideoWhereUniqueInput!): Video
  videos(cursor: VideoWhereUniqueInput, distinct: [VideoScalarFieldEnum!], orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): [Video!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Video {
  id: String!
  rentedBy: String!
  returnDate: String!
  status: String!
  title: String!
}

type VideoCountAggregate {
  _all: Int!
  id: Int!
  rentedBy: Int!
  returnDate: Int!
  status: Int!
  title: Int!
}

input VideoCountOrderByAggregateInput {
  id: SortOrder
  rentedBy: SortOrder
  returnDate: SortOrder
  status: SortOrder
  title: SortOrder
}

input VideoCreateInput {
  id: String
  rentedBy: String!
  returnDate: String!
  status: String!
  title: String!
}

input VideoCreateManyInput {
  id: String
  rentedBy: String!
  returnDate: String!
  status: String!
  title: String!
}

type VideoGroupBy {
  _count: VideoCountAggregate
  _max: VideoMaxAggregate
  _min: VideoMinAggregate
  id: String!
  rentedBy: String!
  returnDate: String!
  status: String!
  title: String!
}

type VideoMaxAggregate {
  id: String
  rentedBy: String
  returnDate: String
  status: String
  title: String
}

input VideoMaxOrderByAggregateInput {
  id: SortOrder
  rentedBy: SortOrder
  returnDate: SortOrder
  status: SortOrder
  title: SortOrder
}

type VideoMinAggregate {
  id: String
  rentedBy: String
  returnDate: String
  status: String
  title: String
}

input VideoMinOrderByAggregateInput {
  id: SortOrder
  rentedBy: SortOrder
  returnDate: SortOrder
  status: SortOrder
  title: SortOrder
}

input VideoOrderByWithAggregationInput {
  _count: VideoCountOrderByAggregateInput
  _max: VideoMaxOrderByAggregateInput
  _min: VideoMinOrderByAggregateInput
  id: SortOrder
  rentedBy: SortOrder
  returnDate: SortOrder
  status: SortOrder
  title: SortOrder
}

input VideoOrderByWithRelationInput {
  id: SortOrder
  rentedBy: SortOrder
  returnDate: SortOrder
  status: SortOrder
  title: SortOrder
}

enum VideoScalarFieldEnum {
  id
  rentedBy
  returnDate
  status
  title
}

input VideoScalarWhereWithAggregatesInput {
  AND: [VideoScalarWhereWithAggregatesInput!]
  NOT: [VideoScalarWhereWithAggregatesInput!]
  OR: [VideoScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  rentedBy: StringWithAggregatesFilter
  returnDate: StringWithAggregatesFilter
  status: StringWithAggregatesFilter
  title: StringWithAggregatesFilter
}

input VideoUpdateInput {
  id: StringFieldUpdateOperationsInput
  rentedBy: StringFieldUpdateOperationsInput
  returnDate: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input VideoUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  rentedBy: StringFieldUpdateOperationsInput
  returnDate: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input VideoWhereInput {
  AND: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  id: StringFilter
  rentedBy: StringFilter
  returnDate: StringFilter
  status: StringFilter
  title: StringFilter
}

input VideoWhereUniqueInput {
  id: String
}
